/* styles.css */
/* ! tailwindcss v3.4.4 | MIT License | https://tailwindcss.com */
/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/
*,
::before,
::after {
  box-sizing: border-box; /* 1 */
  border-width: 0; /* 2 */
  border-style: solid; /* 2 */
  border-color: #e5e7eb; /* 2 */
}
::before,
::after {
  --tw-content: '';
}
/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/
html,
:host {
  line-height: 1.5; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
  -moz-tab-size: 4; /* 3 */
  -o-tab-size: 4;
     tab-size: 4; /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; /* 4 */
  font-feature-settings: normal; /* 5 */
  font-variation-settings: normal; /* 6 */
  -webkit-tap-highlight-color: transparent; /* 7 */
}
/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/
body {
  margin: 0; /* 1 */
  line-height: inherit; /* 2 */
}
/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/
hr {
  height: 0; /* 1 */
  color: inherit; /* 2 */
  border-top-width: 1px; /* 3 */
}
/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/
abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}
/*
Remove the default font size and weight for headings.
*/
h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}
/*
Reset links to optimize for opt-in styling instead of opt-out.
*/
a {
  color: inherit;
  text-decoration: inherit;
}
/*
Add the correct font weight in Edge and Safari.
*/
b,
strong {
  font-weight: bolder;
}
/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/
code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace; /* 1 */
  font-feature-settings: normal; /* 2 */
  font-variation-settings: normal; /* 3 */
  font-size: 1em; /* 4 */
}
/*
Add the correct font size in all browsers.
*/
small {
  font-size: 80%;
}
/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sub {
  bottom: -0.25em;
}
sup {
  top: -0.5em;
}
/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/
table {
  text-indent: 0; /* 1 */
  border-color: inherit; /* 2 */
  border-collapse: collapse; /* 3 */
}
/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/
button,
input,
optgroup,
select,
textarea {
  font-family: inherit; /* 1 */
  font-feature-settings: inherit; /* 1 */
  font-variation-settings: inherit; /* 1 */
  font-size: 100%; /* 1 */
  font-weight: inherit; /* 1 */
  line-height: inherit; /* 1 */
  letter-spacing: inherit; /* 1 */
  color: inherit; /* 1 */
  margin: 0; /* 2 */
  padding: 0; /* 3 */
}
/*
Remove the inheritance of text transform in Edge and Firefox.
*/
button,
select {
  text-transform: none;
}
/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/
button,
input:where([type='button']),
input:where([type='reset']),
input:where([type='submit']) {
  -webkit-appearance: button; /* 1 */
  background-color: transparent; /* 2 */
  background-image: none; /* 2 */
}
/*
Use the modern Firefox focus style for all focusable elements.
*/
:-moz-focusring {
  outline: auto;
}
/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/
:-moz-ui-invalid {
  box-shadow: none;
}
/*
Add the correct vertical alignment in Chrome and Firefox.
*/
progress {
  vertical-align: baseline;
}
/*
Correct the cursor style of increment and decrement buttons in Safari.
*/
::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}
/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/
[type='search'] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}
/*
Remove the inner padding in Chrome and Safari on macOS.
*/
::-webkit-search-decoration {
  -webkit-appearance: none;
}
/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/
::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}
/*
Add the correct display in Chrome and Safari.
*/
summary {
  display: list-item;
}
/*
Removes the default spacing and border for appropriate elements.
*/
blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}
fieldset {
  margin: 0;
  padding: 0;
}
legend {
  padding: 0;
}
ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}
/*
Reset default styling for dialogs.
*/
dialog {
  padding: 0;
}
/*
Prevent resizing textareas horizontally by default.
*/
textarea {
  resize: vertical;
}
/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/
input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1; /* 1 */
  color: #9ca3af; /* 2 */
}
input::placeholder,
textarea::placeholder {
  opacity: 1; /* 1 */
  color: #9ca3af; /* 2 */
}
/*
Set the default cursor for buttons.
*/
button,
[role="button"] {
  cursor: pointer;
}
/*
Make sure disabled buttons don't get the pointer cursor.
*/
:disabled {
  cursor: default;
}
/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/
img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block; /* 1 */
  vertical-align: middle; /* 2 */
}
/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/
img,
video {
  max-width: 100%;
  height: auto;
}
/* Make elements with the HTML hidden attribute stay hidden by default */
[hidden] {
  display: none;
}
*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}
::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}
.sticky {
  position: sticky;
}
.top-0 {
  top: 0px;
}
.mt-36 {
  margin-top: 9rem;
}
.mt-2 {
  margin-top: 0.5rem;
}
.ml-2 {
  margin-left: 0.5rem;
}
.ml-8 {
  margin-left: 2rem;
}
.ml-12 {
  margin-left: 3rem;
}
.ml-24 {
  margin-left: 6rem;
}
.mt-8 {
  margin-top: 2rem;
}
.mt-3 {
  margin-top: 0.75rem;
}
.mt-4 {
  margin-top: 1rem;
}
.mt-12 {
  margin-top: 3rem;
}
.mt-24 {
  margin-top: 6rem;
}
.mt-40 {
  margin-top: 10rem;
}
.mr-8 {
  margin-right: 2rem;
}
.mr-24 {
  margin-right: 6rem;
}
.mr-36 {
  margin-right: 9rem;
}
.mr-44 {
  margin-right: 11rem;
}
.mr-64 {
  margin-right: 16rem;
}
.mt-6 {
  margin-top: 1.5rem;
}
.mt-64 {
  margin-top: 16rem;
}
.flex {
  display: flex;
}
.h-\[776px\] {
  height: 776px;
}
.h-\[\] {
  height: ;
}
.h-\[77\] {
  height: 77;
}
.h-6 {
  height: 1.5rem;
}
.h-\[78px\] {
  height: 78px;
}
.h-\[58px\] {
  height: 58px;
}
.h-\[636px\] {
  height: 636px;
}
.h-\[38px\] {
  height: 38px;
}
.h-\[257px\] {
  height: 257px;
}
.w-\[\] {
  width: ;
}
.w-\[50px\] {
  width: 50px;
}
.w-full {
  width: 100%;
}
.w-\[1F3F86\] {
  width: 1F3F86;
}
.w-\[869\] {
  width: 869;
}
.w-\[869px\] {
  width: 869px;
}
.w-\[80\%\] {
  width: 80%;
}
.w-6 {
  width: 1.5rem;
}
.w-\[553px\] {
  width: 553px;
}
.w-\[50\%\] {
  width: 50%;
}
.w-\[100\%\] {
  width: 100%;
}
.w-\[0\%\] {
  width: 0%;
}
.w-\[30\%\] {
  width: 30%;
}
.w-\[40\%\] {
  width: 40%;
}
.w-\[438px\] {
  width: 438px;
}
.w-\[408px\] {
  width: 408px;
}
.w-\[70\%\] {
  width: 70%;
}
.w-\[56\%\] {
  width: 56%;
}
.w-\[538px\] {
  width: 538px;
}
.w-\[108px\] {
  width: 108px;
}
.w-\[366px\] {
  width: 366px;
}
.w-\[266px\] {
  width: 266px;
}
.w-\[326px\] {
  width: 326px;
}
.w-\[45\%\] {
  width: 45%;
}
.w-\[35\%\] {
  width: 35%;
}
.w-\[55\%\] {
  width: 55%;
}
.w-\[443px\] {
  width: 443px;
}
.w-\[303px\] {
  width: 303px;
}
.w-\[364px\] {
  width: 364px;
}
.translate-y-0 {
  --tw-translate-y: 0px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.translate-y-\[\] {
  --tw-translate-y: ;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.translate-y-\[5px\] {
  --tw-translate-y: 5px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.translate-x-\[5px\] {
  --tw-translate-x: 5px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.translate-y-\[10px\] {
  --tw-translate-y: 10px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.translate-y-\[100px\] {
  --tw-translate-y: 100px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.translate-y-\[px\] {
  --tw-translate-y: px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.translate-y-\[\(10px\)\] {
  --tw-translate-y: (10px);
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.translate-y-1 {
  --tw-translate-y: 0.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.translate-y-7 {
  --tw-translate-y: 1.75rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
@keyframes bounce {
  0%, 100% {
    transform: translateY(-25%);
    animation-timing-function: cubic-bezier(0.8,0,1,1);
  }
  50% {
    transform: none;
    animation-timing-function: cubic-bezier(0,0,0.2,1);
  }
}
.animate-bounce {
  animation: bounce 1s infinite;
}
.flex-col {
  flex-direction: column;
}
.items-start {
  align-items: flex-start;
}
.items-center {
  align-items: center;
}
.justify-end {
  justify-content: flex-end;
}
.justify-center {
  justify-content: center;
}
.justify-between {
  justify-content: space-between;
}
.gap-5 {
  gap: 1.25rem;
}
.gap-\[20px\] {
  gap: 20px;
}
.gap-\[28px\] {
  gap: 28px;
}
.gap-\[28x\] {
  gap: 28x;
}
.gap-12 {
  gap: 3rem;
}
.gap-9 {
  gap: 2.25rem;
}
.gap-6 {
  gap: 1.5rem;
}
.gap-8 {
  gap: 2rem;
}
.gap-4 {
  gap: 1rem;
}
.gap-10 {
  gap: 2.5rem;
}
.gap-64 {
  gap: 16rem;
}
.gap-52 {
  gap: 13rem;
}
.gap-7 {
  gap: 1.75rem;
}
.gap-72 {
  gap: 18rem;
}
.gap-40 {
  gap: 10rem;
}
.gap-24 {
  gap: 6rem;
}
.gap-36 {
  gap: 9rem;
}
.gap-28 {
  gap: 7rem;
}
.gap-2 {
  gap: 0.5rem;
}
.gap-1 {
  gap: 0.25rem;
}
.gap-80 {
  gap: 20rem;
}
.gap-96 {
  gap: 24rem;
}
.gap-32 {
  gap: 8rem;
}
.gap-y-32 {
  row-gap: 8rem;
}
.rounded-lg {
  border-radius: 0.5rem;
}
.rounded-\[410px\] {
  border-radius: 410px;
}
.rounded-\[20px\] {
  border-radius: 20px;
}
.rounded-b {
  border-bottom-right-radius: 0.25rem;
  border-bottom-left-radius: 0.25rem;
}
.rounded-b-\[\] {
  border-bottom-right-radius: ;
  border-bottom-left-radius: ;
}
.rounded-b-\[60px\] {
  border-bottom-right-radius: 60px;
  border-bottom-left-radius: 60px;
}
.border {
  border-width: 1px;
}
.border-\[1px\] {
  border-width: 1px;
}
.border-b {
  border-bottom-width: 1px;
}
.border-\[\] {
  border-color: ;
}
.border-\[whi\] {
  border-color: whi;
}
.border-\[white\] {
  --tw-border-opacity: 1;
  border-color: rgb(255 255 255 / var(--tw-border-opacity));
}
.border-\[solid\] {
  border-color: solid;
}
.border-black {
  --tw-border-opacity: 1;
  border-color: rgb(0 0 0 / var(--tw-border-opacity));
}
.border-\[black\] {
  --tw-border-opacity: 1;
  border-color: rgb(0 0 0 / var(--tw-border-opacity));
}
.border-\[\#045CFC\] {
  --tw-border-opacity: 1;
  border-color: rgb(4 92 252 / var(--tw-border-opacity));
}
.border-\[\#fff\] {
  --tw-border-opacity: 1;
  border-color: rgb(255 255 255 / var(--tw-border-opacity));
}
.border-\[\#\] {
  border-color: #;
}
.bg-\[\#1F3F86\] {
  --tw-bg-opacity: 1;
  background-color: rgb(31 63 134 / var(--tw-bg-opacity));
}
.bg-\[1F3F86\] {
  background-color: 1F3F86;
}
.bg-\[rgb\(31\2c 63\2c 134\)\] {
  --tw-bg-opacity: 1;
  background-color: rgb(31 63 134 / var(--tw-bg-opacity));
}
.bg-\[\] {
  background-color: ;
}
.bg-\[\.\/\] {
  background-color: ./;
}
.bg-\[ur\] {
  background-color: ur;
}
.bg-\[\.\/img\/\] {
  background-color: ./img/;
}
.bg-\[\.\/img\/bg-img\] {
  background-color: ./img/bg-img;
}
.bg-\[\#EFF7FF\] {
  --tw-bg-opacity: 1;
  background-color: rgb(239 247 255 / var(--tw-bg-opacity));
}
.bg-transparent {
  background-color: transparent;
}
.bg-\[\#2C03AB\] {
  --tw-bg-opacity: 1;
  background-color: rgb(44 3 171 / var(--tw-bg-opacity));
}
.bg-\[\#E8F4FF\] {
  --tw-bg-opacity: 1;
  background-color: rgb(232 244 255 / var(--tw-bg-opacity));
}
.p-3 {
  padding: 0.75rem;
}
.p-2 {
  padding: 0.5rem;
}
.p-40 {
  padding: 10rem;
}
.p-36 {
  padding: 9rem;
}
.p-24 {
  padding: 6rem;
}
.p-10 {
  padding: 2.5rem;
}
.p-80 {
  padding: 20rem;
}
.p-\[100px\] {
  padding: 100px;
}
.p-20 {
  padding: 5rem;
}
.p-5 {
  padding: 1.25rem;
}
.px-\[60px\] {
  padding-left: 60px;
  padding-right: 60px;
}
.py-\[150px\] {
  padding-top: 150px;
  padding-bottom: 150px;
}
.py-8 {
  padding-top: 2rem;
  padding-bottom: 2rem;
}
.py-12 {
  padding-top: 3rem;
  padding-bottom: 3rem;
}
.px-8 {
  padding-left: 2rem;
  padding-right: 2rem;
}
.px-12 {
  padding-left: 3rem;
  padding-right: 3rem;
}
.px-36 {
  padding-left: 9rem;
  padding-right: 9rem;
}
.py-24 {
  padding-top: 6rem;
  padding-bottom: 6rem;
}
.px-40 {
  padding-left: 10rem;
  padding-right: 10rem;
}
.px-24 {
  padding-left: 6rem;
  padding-right: 6rem;
}
.pt-40 {
  padding-top: 10rem;
}
.pt-36 {
  padding-top: 9rem;
}
.pt-\[360\] {
  padding-top: 360;
}
.pt-\[100px\] {
  padding-top: 100px;
}
.pl-40 {
  padding-left: 10rem;
}
.pl-\[40px\] {
  padding-left: 40px;
}
.pl-\[40\] {
  padding-left: 40;
}
.pt-20 {
  padding-top: 5rem;
}
.text-center {
  text-align: center;
}
.text-\[20px\] {
  font-size: 20px;
}
.text-\[16px\] {
  font-size: 16px;
}
.text-\[84px\] {
  font-size: 84px;
}
.text-\[28px\] {
  font-size: 28px;
}
.text-\[22px\] {
  font-size: 22px;
}
.text-\[38px\] {
  font-size: 38px;
}
.text-\[24px\] {
  font-size: 24px;
}
.text-\[74px\] {
  font-size: 74px;
}
.text-\[65px\] {
  font-size: 65px;
}
.text-\[55px\] {
  font-size: 55px;
}
.text-\[26px\] {
  font-size: 26px;
}
.text-\[25px\] {
  font-size: 25px;
}
.text-\[56px\] {
  font-size: 56px;
}
.text-\[12px\] {
  font-size: 12px;
}
.text-\[18px\] {
  font-size: 18px;
}
.font-bold {
  font-weight: 700;
}
.leading-\[\] {
  line-height: ;
}
.leading-\[1\] {
  line-height: 1;
}
.leading-3 {
  line-height: .75rem;
}
.leading-\[20px\] {
  line-height: 20px;
}
.leading-\[15px\] {
  line-height: 15px;
}
.leading-\[1px\] {
  line-height: 1px;
}
.leading-\[18px\] {
  line-height: 18px;
}
.leading-\[2px\] {
  line-height: 2px;
}
.leading-\[19px\] {
  line-height: 19px;
}
.leading-10 {
  line-height: 2.5rem;
}
.leading-\[10px\] {
  line-height: 10px;
}
.text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}
.text-\[\] {
  color: ;
}
.text-\[\#045CFC\] {
  --tw-text-opacity: 1;
  color: rgb(4 92 252 / var(--tw-text-opacity));
}
.text-\[white\] {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}
.text-green-50 {
  --tw-text-opacity: 1;
  color: rgb(240 253 244 / var(--tw-text-opacity));
}
.text-\[green\] {
  --tw-text-opacity: 1;
  color: rgb(0 128 0 / var(--tw-text-opacity));
}
.text-\[\#FF7B9B\] {
  --tw-text-opacity: 1;
  color: rgb(255 123 155 / var(--tw-text-opacity));
}
.text-\[\#fff\] {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}
.text-black {
  --tw-text-opacity: 1;
  color: rgb(0 0 0 / var(--tw-text-opacity));
}
.text-\[\#\] {
  color: #;
}
.text-\[\#2C03AB\] {
  --tw-text-opacity: 1;
  color: rgb(44 3 171 / var(--tw-text-opacity));
}
.underline {
  text-decoration-line: underline;
}
.transition {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.duration-150 {
  transition-duration: 150ms;
}
.ease-out {
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
}
.hover\:bottom-\[1px\]:hover {
  bottom: 1px;
}
.hover\:-mt-5:hover {
  margin-top: -1.25rem;
}
.hover\:translate-y-1:hover {
  --tw-translate-y: 0.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.hover\:translate-y-5:hover {
  --tw-translate-y: 1.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.hover\:translate-y-2:hover {
  --tw-translate-y: 0.5rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.hover\:translate-y-12:hover {
  --tw-translate-y: 3rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.hover\:translate-x-1:hover {
  --tw-translate-x: 0.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.hover\:translate-x-2:hover {
  --tw-translate-x: 0.5rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.hover\:-translate-x-1:hover {
  --tw-translate-x: -0.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.hover\:-translate-x-2:hover {
  --tw-translate-x: -0.5rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.hover\:scale-110:hover {
  --tw-scale-x: 1.1;
  --tw-scale-y: 1.1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.hover\:border:hover {
  border-width: 1px;
}
.hover\:border-\[1px\]:hover {
  border-width: 1px;
}
.hover\:border-b-\[1px\]:hover {
  border-bottom-width: 1px;
}
.hover\:bg-\[\]:hover {
  background-color: ;
}
.hover\:bg-\[\#045CFC\]:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(4 92 252 / var(--tw-bg-opacity));
}
.hover\:text-black:hover {
  --tw-text-opacity: 1;
  color: rgb(0 0 0 / var(--tw-text-opacity));
}
@media (min-width: 768px) {
  .md\:ease-in {
    transition-timing-function: cubic-bezier(0.4, 0, 1, 1);
  }
}